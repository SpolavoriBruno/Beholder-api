#! /usr/bin/env node

const beholder = require('../src/beholder')
const app = require('../src/app')
const appEM = require('../src/app-em')
const appWS = require('../src/app-ws')
const logger = require('../src/utils/logger')
const errorHandler = require('../src/utils/errorHandler')
const { getDefaultSettings } = require('../src/repositories/settingsRepository')

const port = process.env.PORT || 3000

process.on('uncaughtException', (...params) => { console.error(...params) })

getDefaultSettings()
    .then(settings => {
        const server = app.listen(port, () => {
            logger.info(`Server is running on port ${port}`)
        })
        const wss = appWS(server)

        if (!settings.accessKey || !settings.secretKey) {
            console.warn("Start on configuration mode, not fund valid Binance API Key or Secret")
            console.warn(`See more on http://localhost:${port}/startconfig`)

            process.on('configureBinanceAPI', () => {
                beholder.init()
                appEM.init(settings, beholder, wss)
            })
            return
        }

        beholder.init()
        appEM.init(settings, beholder, wss)
    })
    .catch(errorHandler)
